SuperAccessTest
---
---
SuperStoreAttrNotOptimized
---
class A:
    def f(self):
      super().x = 1
test = A.f
---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self", User[A]>
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadConst<ImmortalLongExact[1]>
    v5 = LoadGlobalCached<0; "super">
    v5 = GuardIs<0xdeadbeef> v5 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v6 = VectorCall<0> v5 {
      FrameState {
        NextInstrOffset 6
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v7 = StoreAttr<1; "x"> v6 v4 {
      FrameState {
        NextInstrOffset 8
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v8 = LoadConst<NoneType>
    Return v8
  }
}
---
SuperLoadAttr
---
class A:
    def f(self):
      return super().f
test = A.f
---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self", User[A]>
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadGlobalCached<0; "super">
    v4 = GuardIs<0xdeadbeef> v4 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v5 = LoadCellItem v1
    v5 = CheckVar<"__class__"> v5 {
      FrameState {
        NextInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v0 = CheckVar<"self"> v0 {
      FrameState {
        NextInstrOffset 6
        Locals<1> v0
        Cells<1> v1
        Stack<2> v4 v5
      }
    }
    v6 = LoadAttrSuper<1; "f", true> v4 v5 v0 {
      FrameState {
        NextInstrOffset 8
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    Return v6
  }
}
---
MethodCallWithSuperLoadAttr
---
class A:
    def f(self):
      super().f(a=1)
test = A.f
---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self", User[A]>
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadGlobalCached<0; "super">
    v4 = GuardIs<0xdeadbeef> v4 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v5 = LoadCellItem v1
    v5 = CheckVar<"__class__"> v5 {
      FrameState {
        NextInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v0 = CheckVar<"self"> v0 {
      FrameState {
        NextInstrOffset 6
        Locals<1> v0
        Cells<1> v1
        Stack<2> v4 v5
      }
    }
    v6 = LoadAttrSuper<1; "f", true> v4 v5 v0 {
      FrameState {
        NextInstrOffset 8
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v7 = LoadConst<ImmortalLongExact[1]>
    v8 = LoadConst<MortalTupleExact[tuple:0xdeadbeef]>
    v9 = VectorCallKW<2> v6 v7 v8 {
      FrameState {
        NextInstrOffset 14
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v10 = LoadConst<NoneType>
    Return v10
  }
}
---
MethodCallWithSuper
---
class A:
    def f(self):
      super().f()
test = A.f
---
fun jittestmodule:A.f {
  bb 0 {
    v0 = LoadArg<0; "self", User[A]>
    v2 = LoadCurrentFunc
    v3 = LoadField<func_closure@72, Tuple, borrowed> v2
    v1 = LoadTupleItem<0> v3
    Snapshot
    v4 = LoadGlobalCached<0; "super">
    v4 = GuardIs<0xdeadbeef> v4 {
      Descr 'LOAD_GLOBAL: super'
    }
    Snapshot
    v5 = LoadCellItem v1
    v5 = CheckVar<"__class__"> v5 {
      FrameState {
        NextInstrOffset 4
        Locals<1> v0
        Cells<1> v1
        Stack<1> v4
      }
    }
    Snapshot
    v0 = CheckVar<"self"> v0 {
      FrameState {
        NextInstrOffset 6
        Locals<1> v0
        Cells<1> v1
        Stack<2> v4 v5
      }
    }
    v6 = LoadMethodSuper<1; "f", true> v4 v5 v0 {
      FrameState {
        NextInstrOffset 8
        Locals<1> v0
        Cells<1> v1
      }
    }
    v7 = GetSecondOutput<OptObject> v6
    Snapshot
    v8 = CallMethod<2> v6 v7 {
      FrameState {
        NextInstrOffset 10
        Locals<1> v0
        Cells<1> v1
      }
    }
    Snapshot
    v9 = LoadConst<NoneType>
    Return v9
  }
}
---
